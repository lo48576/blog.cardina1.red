---
created_at: 2017-08-05T19:50:59+0900
published_at: 2017-08-05T19:50:59+0900
updated_at: 2017-08-06T14:41:01+0900
format: article2019
title: "Weekly report 2017-W31"
tags:
  - diary
kind: article

excerpt: "2017年 第31週 まとめ"
---
<?xml version="1.0"?>
<article
	xmlns="https://www.cardina1.red/_ns/doc2019"
	xmlns:xl="http://www.w3.org/1999/xlink"
	xml:id="article-2017-08-05-weekly-2017-w31"
	xml:lang="ja"
	version="0.1"
>
<title>Weekly report 2017-W31</title>
<p>
	2017-W30-6 (Sat) から 2017-W31-5 (Fri) までの日記。
</p>


<section xml:id="news">
	<title>ニュース・知ったこと</title>

	<section xml:id="stratis-strage">
		<title>Stratis Storage</title>
		<ul>
			<li>
				<link xl:href="https://twitter.com/daikikohara/status/893025544396132352">Daiki Koharaさんのツイート: "RedHatがBtrfsのサポートを廃止してStratisっていうRust+Python製の新しいストレージシステムを採用するらしい。Fedora28で入る予定だから1年後くらいかな。楽しみだ。 / “Stratis Is R…” https://t.co/69GLrZj1NV"</link>
			</li>
			<li>
				<link xl:href="https://github.com/stratis-storage">Stratis Storage</link>
			</li>
			<li>
				<link xl:href="https://stratis-storage.github.io/">Stratis Storage Project Working Documentation</link>
			</li>
		</ul>
		<p>
			LVM みたいなものなのかな(←全然調べてない顔)。
			btrfs だと暗号化サポートが統合されてなかったのがアレだった<footnote xml:id="footnote-btrfs-ununified-crypt-support" refmark-id="ref-footnote-btrfs-ununified-crypt-support">
				btrfs には暗号化機能が統合されていないため、 btrfs raid などしようとすると、 LUKS で複数の生ディスクやパーティションを暗号化し、その上に btrfs を乗せる必要がある。
				本来であれば btrfs を通じたデータだけを暗号化すれば良いところを、 btrfs ではディスク数だけ同時に暗号化をかける必要があるから、当然これは理想的とは言い難い効率である。
			</footnote>ので、その辺りが洗練された感じになっていると嬉しい。
		</p>
		<p>
			そういえばなんで私は LVM 使ってないのだろう。
			ZFS や btrfs で調教されたせいだろうか。
		</p>
	</section>

	<section xml:id="firefox-test-pilot-send">
		<title>Send</title>
		<ul>
			<li>
				<link xl:href="https://send.firefox.com/">Firefox Send</link>
			</li>
			<li>
				<link xl:href="https://testpilot.firefox.com/experiments/send">Firefox Test Pilot - ⁨Send⁩</link>
			</li>
			<li>
				<link xl:href="https://www.youtube.com/watch?v=ZGWZGYtAS3U">Send: A Firefox Test Pilot Web Experiment</link>
			</li>
		</ul>
		<p>
			Firefox Test Pilot の実験ではあるが、べつに Firefox でなくとも使えるやつ。
			ファイルの受け渡しに便利なはず。
		</p>
	</section>
</section>

<section xml:id="experience">
	<title>個人的な体験</title>

	<section xml:id="graduate-school-entrance-exam-result">
		<title>院死回避</title>
		<p>
			どうやら院死回避できたっぽいので、来年から院生できそう。
		</p>
	</section>
</section>

<section xml:id="private-activities">
	<title>私的活動</title>

	<section xml:id="progress-last-progress1">
		<title>進捗: last-progress1</title>
		<ul>
			<li>
				<link xl:href="https://github.com/lo48576/last-progress1">lo48576/last-progress1: [WIP] ゲーム(になる予定のもの)</link>
			</li>
			<li>
				<link xl:href="https://github.com/lo48576/last-progress1/commit/83ba4a3748f6ad17d2d07021b0a53d8e729c5e83">Merge branch 'feature/static-fbx' into develop · lo48576/last-progress1@83ba4a3</link>
			</li>
		</ul>
		<p>
			last-progress1 は、ゲームにしたい予定の何か。
			今のところは静的な FBX のビューアの域を出ない。
		</p>
		<p>
			ちまちまと作業を続けてきたが、遂に静的メッシュの表示が完成した。
		</p>
		<p>
			次に実装するのはアニメーションを目指してボーンを読んでいく部分なのだが、ただでさえ木構造だというのと関連仕様を†完全理解†しきれていないというのがあり、うまいことコードに落とせなかった。
			もう少し 3D CG の基礎を勉強すべきかもしれない。
		</p>
		<figure>
			<blockquote cite="https://gnusocial.cardina1.red/notice/166253">
				<p>
					ここ数日、 Model (Limbnode) の下に Model (Null) が生えててその下に更に Model (LimbNode) が生えてるのをどう扱えばいいのかわからず進捗が止まっている
					<link xl:href="https://gnusocial.cardina1.red/file/c7086d09504c577e53b27ff889e71e1520f1c348e57867eb81da9538696a1c81.png">https://gnusocial.cardina1.red/attachment/27593</link>
				</p>
				<mediaobject>
					<img src="gnusocial-cardina1-red-166253.png" alt="" xl:href="https://gnusocial.cardina1.red/attachment/27593" />
				</mediaobject>
				<footer>
					&#x2014;
					<attribution><link xl:href="https://gnusocial.cardina1.red/user/3">@loliconductor@gnusocial.cardina1.red</link></attribution>,
					<pubdate><time datetime="2017-08-02T17:18:51+0900">2017-08-02 17:18:51</time></pubdate>,
					<link xl:href="https://gnusocial.cardina1.red/notice/166253"><uri>https://gnusocial.cardina1.red/notice/166253</uri></link>
				</footer>
			</blockquote>
			<blockquote cite="https://gnusocial.cardina1.red/notice/166254">
				<p>
					IK とかするときボーン相当のノードの親子関係は網羅できないと困るし、普通に考えると Model (LimbNode) をボーンと考えれば十分なんだろうけど、 Model (Null) はデフォルトの行列も割り当てられていないし、はてさて2種類のノードをうまく扱うにはどうしようという
				</p>
				<footer>
					&#x2014;
					<attribution><link xl:href="https://gnusocial.cardina1.red/user/3">@loliconductor@gnusocial.cardina1.red</link></attribution>,
					<pubdate><time datetime="2017-08-02T17:20:16+0900">2017-08-02 17:20:16</time></pubdate>,
					<link xl:href="https://gnusocial.cardina1.red/notice/166254"><uri>https://gnusocial.cardina1.red/notice/166254</uri></link>
				</footer>
			</blockquote>
			<caption>うーん</caption>
		</figure>
		<p>
			あと、並行してリソース管理のモジュールを作ろうとしたが、 <link xl:href="https://crates.io/crates/gfx_device_gl"><code>gfx_device_gl</code></link> crate がマルチスレッドで同じ GL context を扱うのに対応していないため、テクスチャの転送とかを別スレッドで行うことができないっぽい。
			険しい。
			協調的マルチタスクを自前で実装する破目になったら嫌だなぁ<footnote xml:id="footnote-implementing-non-preemptive-multitasking" refmark-id="ref-footnote-implementing-non-preemptive-multitasking">
				<link xl:href="https://crates.io/crates/futures">futures-rs</link> でできそうな気はするんだけど、まだ確認してない
			</footnote>。
		</p>
	</section>
</section>

</article>
